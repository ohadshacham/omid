<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="testing-gce-fb862589-bb66-4e53-8fb4-63c45588e22a.c.travis-ci-prod-3.internal" name="com.yahoo.omid.tso.TestPersistenceProcessor" tests="7" failures="0" timestamp="15 Mar 2016 17:24:01 GMT" time="4.110" errors="1">
  <testcase name="testCommitPersistenceWithNonHALeaseManager" time="0.638" classname="com.yahoo.omid.tso.TestPersistenceProcessor"/>
  <testcase name="testCommitTableExceptionOnCommitPersistenceTakesDownDaemon" time="1.954" classname="com.yahoo.omid.tso.TestPersistenceProcessor"/>
  <testcase name="testRuntimeExceptionOnCommitPersistenceTakesDownDaemon" time="0.200" classname="com.yahoo.omid.tso.TestPersistenceProcessor"/>
  <testcase name="testCommitPersistenceWithHALeaseManagerMultiHandlers" time="0.743" classname="com.yahoo.omid.tso.TestPersistenceProcessor"/>
  <testcase name="testCommitPersistenceWithSingleHanlderInMultiHandlersEnvironment" time="0.120" classname="com.yahoo.omid.tso.TestPersistenceProcessor"/>
  <testcase name="testCommitPersistenceWithMultiHandlers" time="0.241" classname="com.yahoo.omid.tso.TestPersistenceProcessor"/>
  <testcase name="testCommitPersistenceWithHALeaseManager" time="0.214" classname="com.yahoo.omid.tso.TestPersistenceProcessor">
    <error type="org.mockito.exceptions.verification.WantedButNotInvoked" message="
Wanted but not invoked:
batch.sendReply(&lt;any&gt;, &lt;any&gt;, &lt;any&gt;, false);
-&gt; at com.yahoo.omid.tso.TestPersistenceProcessor.testCommitPersistenceWithHALeaseManagerPerConfig(TestPersistenceProcessor.java:244)

However, there were other interactions with this mock:
-&gt; at com.yahoo.omid.tso.PersistenceProcessorImpl.persistCommit(PersistenceProcessorImpl.java:184)
-&gt; at com.yahoo.omid.tso.PersistenceProcessorImpl.persistCommit(PersistenceProcessorImpl.java:185)
-&gt; at com.yahoo.omid.tso.PersistenceProcessorImpl.persistFlush(PersistenceProcessorImpl.java:173)
-&gt; at com.yahoo.omid.tso.PersistenceProcessorImpl$PersistenceProcessorHandler.onEvent(PersistenceProcessorImpl.java:366)
-&gt; at com.yahoo.omid.tso.PersistenceProcessorImpl$PersistenceProcessorHandler.flush(PersistenceProcessorImpl.java:408)
">
      <![CDATA[Wanted but not invoked:
batch.sendReply(<any>, <any>, <any>, false);
-> at com.yahoo.omid.tso.TestPersistenceProcessor.testCommitPersistenceWithHALeaseManagerPerConfig(TestPersistenceProcessor.java:244)

However, there were other interactions with this mock:
-> at com.yahoo.omid.tso.PersistenceProcessorImpl.persistCommit(PersistenceProcessorImpl.java:184)
-> at com.yahoo.omid.tso.PersistenceProcessorImpl.persistCommit(PersistenceProcessorImpl.java:185)
-> at com.yahoo.omid.tso.PersistenceProcessorImpl.persistFlush(PersistenceProcessorImpl.java:173)
-> at com.yahoo.omid.tso.PersistenceProcessorImpl$PersistenceProcessorHandler.onEvent(PersistenceProcessorImpl.java:366)
-> at com.yahoo.omid.tso.PersistenceProcessorImpl$PersistenceProcessorHandler.flush(PersistenceProcessorImpl.java:408)

	at com.yahoo.omid.tso.TestPersistenceProcessor.testCommitPersistenceWithHALeaseManagerPerConfig(TestPersistenceProcessor.java:244)
	at com.yahoo.omid.tso.TestPersistenceProcessor.testCommitPersistenceWithHALeaseManager(TestPersistenceProcessor.java:201)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:348)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:343)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:305)
	at org.testng.SuiteRunner.run(SuiteRunner.java:254)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:132)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:134)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:118)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:146)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:286)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:240)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
    </error>
  </testcase> <!-- testCommitPersistenceWithHALeaseManager -->
</testsuite> <!-- com.yahoo.omid.tso.TestPersistenceProcessor -->
